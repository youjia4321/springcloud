server:
  port: 8082
logging:
  level:
    com.order: debug
spring:
  application:
    name: order-service
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/seata_demo?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
    username: root
    password: 123456
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848
mybatis-plus:
  global-config:
    db-config:
      insert-strategy: not_null
      update-strategy: not_null
      id-type: auto
seata:
  registry: # seata tc服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址
    # 下面参考seata服务的registry.conf中的配置
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848
      namespace: ""
      group: DEFAULT_GROUP
      application: seata-tc-server # tc服务在nacos中的服务名称
      cluster: SH
  tx-service-group: seata-demo # 事务组，根据这个获取tc服务的cluster名称
  service:
    vgroup-mapping: # 事务组与tc服务cluster的映射关系
      seata-demo: SH
  data-source-proxy-mode: AT
feign:
  hystrix:
    enabled: true # 开启服务降级

#hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            #设置请求超时时间，默认1秒，超过指定的时间后，触发服务熔断
            timeoutInMilliseconds: 10000
#ribbon的超时时间
ribbon:
  ReadTimeout: 5000 #设置请求处理的超时时间
  ConnectTimeout: 5000  #设置请求链接的超时时间